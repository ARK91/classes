; prog_rom.psm
; John F. Hubbard, 26 Mar 2015
;
; For problem 3 on page 389 of UCSC 20307: Digital Design with FPGA:
; Problem statement:
;
;  1. Start with a number,start, say 4.
;  2. Increment the number by a number, incr, say 20
;  3. Addition is done using microblaze
;  4. Display the number on the board at a time interval of 'n' second
;  Example 4,24,44,64 etc
;  5. Output the above results on LED's also
;  6. What happens after the sum > 255
;  7. Modify the code, both hardware and software code, to
;  handle 16 bits.
;
; Derived from course manual (Copyright: Jagadeesh Vasudevamurthy)
;
; Compile:
; Download: http://www.xilinx.com/ipcenter/processor_central/picoblaze/member/
; Extract, and use:
;   prog_rom.psm (this file)
;   cp ROM_form_JTAGLoader_Vivado_2June14.v ROM_form.v
;   RUN: kcpsm6.exe

;======================================================
; input and output ports:
constant INPUTPORT,  00
constant OUTPUTPORT, 02
;======================================================

;======================================================
; register aliases:
namereg s0, displayDone ; s0 reg has "display done" signal
namereg s1, flag        ; Do not add until indata differs from flag
namereg s2, answer      ; Use s2 for final answer
;======================================================
; Main Program
init:
    load answer, 04              ; Initialize with answer = 4
    output answer, OUTPUTPORT    ; Send initial answer to OUTPUTPORT
    load flag, 00

; displayDone is a 1Hz signal, so this code is essentially looking for
; edges: it does an addition only when there is a zero-to-one, or one-to-zero
; transition in displayDone.

loop:
    input displayDone, INPUTPORT ; Read displayDone from the INPUTPORT
    compare displayDone, flag    ; Is displayDone == flag?
    jump z, loop                 ; if so, just loop and do nothing

; displayDone is different, so do the addition, display it, and set
; displayDone = flag so it sits still.

    add answer, 14               ; else, answer += 20 (0x14)
    load flag, displayDone       ; Ensure that displayDone == flag
    output answer, OUTPUTPORT    ; Send the answer to OUTPUTPORT
    jump loop

